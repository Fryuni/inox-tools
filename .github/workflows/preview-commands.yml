name: Preview commands

on:
  issue_comment:
    types: [created]

defaults:
  run:
    shell: bash

env:
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
  FORCE_COLOR: 1

jobs:
  preview-mode:
    name: Enter preview mode
    if: ${{ github.repository_owner == 'Fryuni' && github.event.issue.pull_request && (contains(github.event.comment.body, '!preview') || contains(github.event.comment.body, '/preview') }}
    runs-on: ubuntu-latest
    permissions: 
      contents: read 
      id-token: write
      issues: write
      pull-requests: write
    steps:
      - name: "Check if user has admin access"
        uses: "lannonbr/repo-permission-check-action@2.0.0"
        with:
          permission: "admin"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract the preview name from comment body
        id: getPreviewName
        uses: actions/github-script@v7
        with:
          script: |
            const { body } = context.payload.comment;
            const PREVIEW_RE = /^[!\/](?:preview|snapshot)\s+(\S*)\s*$/gim;
            const [_, name] = PREVIEW_RE.exec(body) ?? [];
            if (name) return name;

            const error = 'Invalid command. Expected: "/preview <snapshot-name>"'
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: error,
            })
            core.setFailed(error)
          result-encoding: string

      - name: Resolve PR Refs
        id: refs
        uses: eficode/resolve-pr-refs@main
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/checkout@v4
        with:
          ref: ${{ steps.refs.outputs.head_ref }}
          fetch-depth: 0

      - run: git fetch origin main:main

      - name: Setup PNPM
        uses: pnpm/action-setup@v2

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          registry-url: "https://registry.npmjs.org"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Enter pre-release mode
        run: |
          pnpm changeset pre enter ${{ steps.getPreviewName.outputs.result }}
          pnpm version

      - name: Commit
        uses: EndBug/add-and-commit@v9
        with:
          GITHUB_TOKEN: ${{ secrets.COMMIT_TOKEN }}
          message: Enter pre-release mode
          author_name: Croct Bot
          author_email: bot@croct.com

