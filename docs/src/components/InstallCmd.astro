---
import { Aside, Code } from '@astrojs/starlight/components';
import { AstroError } from 'astro/errors';
import { PackageManagers } from 'starlight-package-managers';

export type Props = {
	type?: 'lib' | 'devLib' | 'integration';
	packageName?: string;
	inSteps?: boolean;
	version?: string;
};

const { type: packageType = 'integration', inSteps, version = 'beta' } = Astro.props;
const packageName: string | undefined =
	Astro.locals.starlight.entry.data.packageName ?? Astro.props.packageName;

if (!packageName) {
	throw new AstroError('Missing package name.');
}

const packageSpec = version && version !== 'latest' ? `${packageName}@${version}` : packageName;

// Taked from Astro source to show the exact code the user will see.
const codemodBrokenIdent = packageSpec
	.trim()
	.replace(/[-_./]?astro(?:js)?[-_.]?/g, '')
	.replace(/\.js/, '')
	.replace(/[.\-_/]+([a-zA-Z])/g, (_, w) => w.toUpperCase())
	.replace(/^[^a-zA-Z$_]+/, '');
const codemodFixedIdent = codemodBrokenIdent.replace(/@.*$/, '');
---

{
	inSteps && (
		<>
			Install <code dir="auto">{packageName}</code>:{' '}
		</>
	)
}

{
	packageType === 'integration' && (
		<>
			<PackageManagers type="exec" pkg="astro" args={`add ${packageSpec}`} />
			{codemodBrokenIdent !== codemodFixedIdent && (
				<Aside type="caution" title="Invalid Codemod">
					<p>
						Installing the <code>{version}</code> version of the this package using
						<code>astro add</code>
						generates an invalid code for your Astro Config. After installing, remove the
						<code>@{version}</code> added in the import and integrations section.
					</p>
					<Code
						lang="ts"
						title="astro.config.mjs"
						del={{ range: '1,5' }}
						ins={{ range: '2,6' }}
						code={`
import ${codemodBrokenIdent} from '${packageName}';
import ${codemodFixedIdent} from '${packageName}';

export default defineConfig({
	integrations: [${codemodBrokenIdent}()],
	integrations: [${codemodFixedIdent}()],
});`.trim()}
					/>
					<p>
						Follow <a href="https://github.com/withastro/astro/issues/12359">this issue</a> for more
						information and updates.
					</p>
				</Aside>
			)}
		</>
	)
}

{
	packageType !== 'integration' && (
		<PackageManagers dev={packageType === 'devLib'} pkg={packageSpec} />
	)
}
