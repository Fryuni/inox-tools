---
import { AstroError } from 'astro/errors';
import { PackageManagers } from 'starlight-package-managers';

export type Props = {
	type?: 'lib' | 'devLib' | 'integration';
	packageName?: string;
	inSteps?: boolean;
	version?: string;
};

const { type: packageType = 'integration', inSteps, version = 'latest' } = Astro.props;
const packageName: string | undefined =
	Astro.locals.starlightRoute.entry.data.packageName ?? Astro.props.packageName;

if (!packageName) {
	throw new AstroError('Missing package name.');
}

const packageSpec = version && version !== 'latest' ? `${packageName}@${version}` : packageName;
---

{
	inSteps && (
		<>
			Install <code dir="auto">{packageName}</code>:{' '}
		</>
	)
}

{
	packageType === 'integration' && (
		<>
			<PackageManagers type="exec" pkg="astro" args={`add ${packageSpec}`} />
		</>
	)
}

{
	packageType !== 'integration' && (
		<PackageManagers dev={packageType === 'devLib'} pkg={packageSpec} />
	)
}
