---
import { getLatestCommitDate, getOldestCommitDate } from '@it-astro:content/git';
import { getCollection } from 'astro:content';
import { logger as integrationLogger } from '@it-astro:logger:test-integration';
import { logger } from '@it-astro:logger';
import Foo from '../component/Foo.astro';

const entries = await getCollection('blog');

integrationLogger.info(`Retrieved ${entries.length} entries`);
logger.info(`Retrieved ${entries.length} entries`);

const dates = await Promise.all(
	entries.map(async (entry) => {
		const latest = await getLatestCommitDate(entry);
		const oldest = await getOldestCommitDate(entry);

		return [entry, latest, oldest] as const;
	})
);
---

<html lang="en">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<title>Astro</title>
	</head>
	<body>
		<h1>Astro</h1>
		<Foo />
		<ul>
			{
				dates.map(([entry, latest, oldest]) => (
					<li>
						Entry "{entry.slug}" of collection "{entry.collection}":
						<ul>
							<li>Latest: {latest}</li>
							<li>Oldest: {oldest}</li>
						</ul>
					</li>
				))
			}
		</ul>
	</body>
</html>
